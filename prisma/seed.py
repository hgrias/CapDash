from prisma import Prisma
import asyncio
import pprint
import json

pp = pprint.PrettyPrinter(indent=1)

STATE = "TX"


async def main() -> None:
    # Connect to Prisma Client
    db = Prisma()
    await db.connect()

    # Takes in the JSON object generated by the Legiscan sessionPeople endpoint
    with open("prisma/seedData.json", "r") as file:
        data = json.load(file)

    session_data = data["sessionpeople"]["session"]
    session_people = data["sessionpeople"]["people"]

    organization = await db.organization.create(
        data={
            "name": "Texas Appleseed",
            "slug": "texas-appleseed",
            "websiteUrl": "https://www.texasappleseed.org/",
        },
    )

    user = await db.user.create(
        data={
            "name": "John Doe",
            "email": "john.doe@gmail.com",
            "organizationId": organization.id,
        },
    )

    session = await db.legislativesession.create(
        data={
            "id": session_data["session_id"],
            "state": STATE,
            "active": True,
            "yearStart": session_data["year_start"],
            "yearEnd": session_data["year_end"],
            "sessionName": session_data["session_name"],
            "sessionTitle": session_data["session_title"],
            "sessionTag": session_data["session_tag"],
        },
    )

    errors = []
    for legislator in session_people:
        try:
            await db.legislator.create(
                data={
                    "firstName": legislator["first_name"],
                    "lastName": legislator["last_name"],
                    "state": STATE,
                    "party": legislator["party"],
                    "role": legislator["role"],
                    "district": legislator["district"],
                    "legiscanId": legislator["people_id"],
                    "personHash": legislator["person_hash"],
                    "organizationId": organization.id,
                    "currentSessionId": session.id,
                    "LegislatorInfo": {
                        "create": {
                            "email": f"{legislator['first_name']}.{legislator['last_name']}@{STATE}.gov",
                            "phone": "123-154-1257",
                            "capitolOfficeNumber": "E2.407",
                            "chamberWebsiteUrl": "https://www.example.com/chamber",
                            "capitolWebsiteUrl": "https://www.example.com/capitol",
                            "capitolAddress": "P.O. Box 12068 Capitol Station Austin, TX 78711",
                            "districtAddress": "3000 Briarcrest Drive Suite 202 Bryan, TX 77802",
                        }
                    },
                    "Staffers": {
                        "create": [
                            {
                                "email": "harrisongrias@staffer.com",
                                "phone": "123-456-7890",
                                "name": "Harrison Grias",
                                "position": "Staffer",
                            },
                            {
                                "email": "akankshabalekai@example.com",
                                "phone": "432-421-6754",
                                "name": "Akanksha Balekai",
                                "position": "Chief of Staff",
                            },
                        ]
                    },
                    "Interactions": {
                        "create": [
                            {
                                "createdBy": user.id,
                                # "legislatorId": legislator.id,
                                "content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
                                "sessionId": session.id,
                                "organizationId": organization.id,
                                "type": "BILL",
                            },
                            {
                                "createdBy": user.id,
                                # "legislatorId": legislator.id,
                                "content": "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",
                                "sessionId": session.id,
                                "organizationId": organization.id,
                                "type": "BILL",
                            },
                        ]
                    },
                }
            )
        except Exception as err:
            errors.append({"Error": err, "Record": legislator})

    if errors:
        print("The following errors occurred:")
        pp.pprint(errors)
        print("--------------------------------------------------------\n")

    print("Seeding complete!")

    await db.disconnect()


if __name__ == "__main__":
    asyncio.run(main())
