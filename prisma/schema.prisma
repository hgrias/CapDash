// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
}

generator db {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = 5
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Organization {
  id             String           @id @default(cuid())
  name           String
  slug           String           @unique
  websiteUrl     String?
  users          User[]
  legislators    Legislator[]
  interactions   Interaction[]
  LegislatorInfo LegislatorInfo[]
  StafferContact StafferContact[]
}

model User {
  id             String        @id @default(cuid())
  name           String?
  email          String?       @unique
  emailVerified  DateTime?
  image          String?
  accounts       Account[]
  sessions       Session[]
  interactions   Interaction[]
  organizationId String?
  organization   Organization? @relation(fields: [organizationId], references: [id])

  @@index([organizationId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Legislator {
  id                        String             @id @default(cuid())
  firstName                 String
  lastName                  String
  state                     State
  party                     Party
  role                      Role
  district                  String
  legiscanId                Int? // ID associated with legiscan
  personHash                String? // Used to determine if there is a difference in data (if coming from legiscan API)
  imageUri                  String? // TODO: Move this into LegislatorInfo?
  createdAt                 DateTime           @default(now())
  updatedAt                 DateTime           @default(now()) @updatedAt
  organizationId            String
  organization              Organization       @relation(fields: [organizationId], references: [id])
  currentLegislativeSession LegislativeSession @relation(fields: [currentSessionId], references: [id])
  currentSessionId          Int
  Interactions              Interaction[]
  LegislatorInfo            LegislatorInfo[]
  Staffers                  StafferContact[]

  @@unique([role, state, district, organizationId])
  @@index([organizationId])
}

model LegislatorInfo {
  id                  String       @id @default(cuid())
  phone               String?
  email               String?
  capitolOfficeNumber String?
  districtAddress     String?
  capitolAddress      String?
  websiteUrl          String?
  chamberWebsiteUrl   String?
  capitolWebsiteUrl   String?
  nickName            String?
  legislatorId        String
  legislator          Legislator   @relation(fields: [legislatorId], references: [id])
  organizationId      String
  organization        Organization @relation(fields: [organizationId], references: [id])
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @default(now()) @updatedAt

  @@unique([legislatorId, organizationId])
  @@index([organizationId])
}

model StafferContact {
  id             String       @id @default(cuid())
  name           String
  email          String
  phone          String
  position       String?
  legislator     Legislator   @relation(fields: [legislatorId], references: [id])
  legislatorId   String
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id])
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @default(now()) @updatedAt

  @@index([organizationId])
}

model LegislativeSession {
  id          Int           @id
  yearStart   Int
  yearEnd     Int
  active      Boolean       @default(false)
  archived    Boolean       @default(false)
  special     Boolean       @default(false)
  sineDie     Boolean       @default(false)
  state       State
  Interaction Interaction[]
  Legislator  Legislator[]
}

model Interaction {
  id                 String             @id @default(cuid())
  createdBy          String
  legislatorId       String
  content            String
  sessionId          Int
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @default(now()) @updatedAt
  actionNeeded       Boolean            @default(false)
  type               InteractionType
  organizationId     String
  organization       Organization       @relation(fields: [organizationId], references: [id])
  user               User               @relation(fields: [createdBy], references: [id], onDelete: Cascade)
  legislator         Legislator         @relation(fields: [legislatorId], references: [id], onDelete: Cascade)
  legislativeSession LegislativeSession @relation(fields: [sessionId], references: [id])

  @@index([organizationId])
}

enum InteractionType {
  BILL
  TESTIMONY
  GENERAL
  UNKNOWN
}

enum State {
  AL
  AK
  AZ
  AR
  CA
  CO
  CT
  DE
  FL
  GA
  HI
  ID
  IL
  IN
  IA
  KS
  KY
  LA
  ME
  MD
  MA
  MI
  MN
  MS
  MO
  MT
  NE
  NV
  NH
  NJ
  NM
  NY
  NC
  ND
  OH
  OK
  OR
  PA
  RI
  SC
  SD
  TN
  TX
  UT
  VT
  VA
  WA
  WV
  WI
  WY
  UNKNOWN
}

enum Party {
  D
  R
  O
  I
}

enum Role {
  Sen
  Rep
}
